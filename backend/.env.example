# ===============================================
# YIELDAGENTX BACKEND ENVIRONMENT CONFIGURATION
# ===============================================

# Network Configuration
# Ethereum Sepolia Testnet RPC endpoints
SEPOLIA_RPC_URL=https://sepolia.infura.io/v3/YOUR_INFURA_PROJECT_ID
SEPOLIA_RPC_URL_BACKUP=https://eth-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY

# Alternative RPC providers for redundancy
SEPOLIA_RPC_ANKR=https://rpc.ankr.com/eth_sepolia
SEPOLIA_RPC_PUBLIC=https://ethereum-sepolia.publicnode.com

# Deployment Configuration
# Private key for contract deployment (NEVER commit real keys!)
PRIVATE_KEY=0x0000000000000000000000000000000000000000000000000000000000000000
DEPLOYER_ADDRESS=0x0000000000000000000000000000000000000000

# Chainlink VRF v2.5 Configuration (Sepolia)
# VRF Coordinator address on Sepolia testnet
VRF_COORDINATOR=0x8103B0A8A00be2DDC778e6e7eaa21791Cd364625

# VRF Key Hash for 30 gwei gas lane on Sepolia
VRF_KEY_HASH=0x474e34a077df58807dbe9c96d3c009b23b3c6d0cce433e59bbf5b34f823bc56c

# Your VRF subscription ID (create at vrf.chain.link)
VRF_SUBSCRIPTION_ID=0

# VRF request configuration
VRF_CALLBACK_GAS_LIMIT=2500000
VRF_REQUEST_CONFIRMATIONS=3
VRF_NUM_WORDS=1

# Chainlink Automation Configuration (Sepolia)
# Automation registry address on Sepolia
AUTOMATION_REGISTRY=0x86EFBD0b6735A20bd1Da63470a2E43e83C2db9c1

# Automation forwarder (if using custom logic)
AUTOMATION_FORWARDER=0x0000000000000000000000000000000000000000

# Chainlink Price Feeds (Sepolia)
# ETH/USD price feed address
ETH_USD_PRICE_FEED=0x694AA1769357215DE4FAC081bf1f309aDC325306

# Additional price feeds for future use
BTC_USD_PRICE_FEED=0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43
LINK_USD_PRICE_FEED=0xc59E3633BAAC79493d908e63626716e204A45EdF

# LINK Token Configuration
# LINK token address on Sepolia
LINK_TOKEN=0x779877A7B0D9E8603169DdbD7836e478b4624789

# Contract Verification
# Etherscan API key for contract verification
ETHERSCAN_API_KEY=YOUR_ETHERSCAN_API_KEY

# For Sepolia testnet verification
ETHERSCAN_URL=https://api-sepolia.etherscan.io/api

# Gas Configuration
# Gas settings for deployment and transactions
DEFAULT_GAS_PRICE=20000000000
DEFAULT_GAS_LIMIT=5000000
MAX_FEE_PER_GAS=50000000000
MAX_PRIORITY_FEE_PER_GAS=2000000000

# Development Configuration
# Hardhat network settings
HARDHAT_NETWORK=sepolia
HARDHAT_CHAIN_ID=11155111

# Forking configuration for testing
FORK_ENABLED=false
FORK_BLOCK_NUMBER=latest

# Testing Configuration
# Test settings and mock configurations
TEST_TIMEOUT=60000
TEST_MOCK_VRF=true
TEST_MOCK_PRICE_FEEDS=true
TEST_VERBOSE=false

# Contract Addresses (Deployed)
# Main contract addresses after deployment
AI_VAULT_ADDRESS=0xa513E6E4b8f2a923D98304ec87F64353C4D5C853
VRF_RAFFLE_ADDRESS=0x742d35Cc6634C0532925a3b8D6Ee6B8Cc3532e83

# Additional contract addresses
VAULT_FACTORY_ADDRESS=
STRATEGY_MANAGER_ADDRESS=
REWARD_DISTRIBUTOR_ADDRESS=

# DeFi Protocol Integration
# Lido stETH configuration
LIDO_STETH_ADDRESS=0x0000000000000000000000000000000000000000
LIDO_WITHDRAWAL_QUEUE=0x0000000000000000000000000000000000000000

# Aave v3 configuration (if implementing)
AAVE_POOL_ADDRESS=0x0000000000000000000000000000000000000000
AAVE_WETH_GATEWAY=0x0000000000000000000000000000000000000000

# Uniswap v3 configuration (if implementing)
UNISWAP_ROUTER=0x0000000000000000000000000000000000000000
UNISWAP_FACTORY=0x0000000000000000000000000000000000000000

# Monitoring and Analytics
# Performance monitoring settings
ENABLE_MONITORING=true
MONITORING_INTERVAL=30000

# Event logging configuration
LOG_LEVEL=info
LOG_TO_FILE=false
LOG_FILE_PATH=./logs/backend.log

# API Configuration
# If integrating with external APIs
COINGECKO_API_KEY=
DEFIPULSE_API_KEY=
DUNE_API_KEY=

# Security Configuration
# Security-related settings
ENABLE_SAFETY_CHECKS=true
MAX_PORTFOLIO_SIZE=1000000000000000000000
MIN_REBALANCE_INTERVAL=3600

# Emergency Configuration
# Emergency response settings
EMERGENCY_PAUSE_ENABLED=true
EMERGENCY_ADMIN_ADDRESS=0x0000000000000000000000000000000000000000

# Multi-signature wallet (if used)
MULTISIG_WALLET_ADDRESS=0x0000000000000000000000000000000000000000

# Backup Configuration
# Contract upgrade and backup settings
BACKUP_ENABLED=true
BACKUP_INTERVAL=86400
PROXY_ADMIN_ADDRESS=0x0000000000000000000000000000000000000000

# ===============================================
# CHAINLINK AUTOMATION SETUP INSTRUCTIONS
# ===============================================

# 1. Deployment Setup:
#    a. Deploy contracts using: npm run deploy:sepolia
#    b. Verify contracts using: npm run verify:sepolia
#    c. Note deployed contract addresses

# 2. VRF Subscription Setup:
#    a. Visit: https://vrf.chain.link/sepolia
#    b. Create new subscription
#    c. Fund subscription with LINK tokens
#    d. Add your raffle contract as consumer
#    e. Update VRF_SUBSCRIPTION_ID in this file

# 3. Automation Registration:
#    a. Visit: https://automation.chain.link/sepolia
#    b. Register new upkeep for your AI Vault contract
#    c. Set appropriate trigger conditions
#    d. Fund upkeep with LINK tokens
#    e. Configure gas limits and execution parameters

# 4. Price Feed Verification:
#    a. Verify ETH/USD feed is active: 0x694AA1769357215DE4FAC081bf1f309aDC325306
#    b. Test price feed integration in your contracts
#    c. Implement fallback mechanisms if needed

# ===============================================
# DEPLOYMENT CHECKLIST
# ===============================================

# Pre-deployment:
# [ ] All environment variables configured
# [ ] Private key secured and funded with ETH
# [ ] Chainlink services configured (VRF, Automation)
# [ ] Contract compilation successful
# [ ] All tests passing

# Post-deployment:
# [ ] Contracts verified on Etherscan
# [ ] VRF subscription created and funded
# [ ] Automation upkeep registered and funded
# [ ] Frontend connected to deployed contracts
# [ ] Basic functionality tested on testnet

# ===============================================
# SECURITY NOTES
# ===============================================

# 1. Private Key Security:
#    - NEVER commit real private keys to version control
#    - Use hardware wallets for mainnet deployments
#    - Implement multi-sig for contract ownership

# 2. API Key Protection:
#    - Keep API keys secure and rotate regularly
#    - Use different keys for different environments
#    - Monitor API usage and rate limits

# 3. Contract Security:
#    - Audit contracts before mainnet deployment
#    - Implement comprehensive test coverage
#    - Use established security patterns (OpenZeppelin)
#    - Plan for emergency scenarios

# 4. Access Controls:
#    - Implement proper role-based access control
#    - Use time-locks for critical functions
#    - Plan ownership transfer procedures

# ===============================================
# TROUBLESHOOTING
# ===============================================

# Common deployment issues:

# 1. Insufficient gas or gas price too low:
#    - Increase DEFAULT_GAS_LIMIT and DEFAULT_GAS_PRICE
#    - Check current network gas prices

# 2. VRF subscription issues:
#    - Ensure subscription has sufficient LINK balance
#    - Verify consumer contract is added to subscription
#    - Check VRF coordinator and key hash are correct

# 3. Automation not triggering:
#    - Verify upkeep is registered and funded
#    - Check checkUpkeep function returns true
#    - Review automation logs for errors

# 4. Price feed failures:
#    - Verify price feed addresses are correct
#    - Check if feeds are active on target network
#    - Implement proper error handling

# 5. Contract verification failures:
#    - Ensure Etherscan API key is valid
#    - Verify compiler version matches deployment
#    - Check constructor arguments are correct

# For additional support:
# - Chainlink Documentation: https://docs.chain.link/
# - Hardhat Documentation: https://hardhat.org/docs/
# - OpenZeppelin Documentation: https://docs.openzeppelin.com/
