# ==========================================
# YIELDAGENTX AI SERVICE - VERCEL DEPLOYMENT
# Environment Variables Configuration
# ==========================================

# ===== AI SERVICE CONFIGURATION =====
# Hugging Face API for AI analysis (optional but recommended)
HUGGINGFACE_API_KEY=your_huggingface_api_key_here

# OpenAI API for advanced AI features (optional)
OPENAI_API_KEY=your_openai_api_key_here

# ===== CORS & SECURITY =====
# Allowed origins for CORS (use * for development, specific domains for production)
CORS_ORIGIN=https://your-frontend-domain.vercel.app

# Node environment
NODE_ENV=production

# ===== OPTIONAL FEATURES =====
# Rate limiting configuration
ENABLE_RATE_LIMITING=true
LOG_LEVEL=info

# ===== VERCEL DEPLOYMENT INSTRUCTIONS =====
# 1. Copy this file to .env.local for local development
# 2. Add these environment variables in your Vercel dashboard:
#    - Go to your project settings in Vercel
#    - Navigate to Environment Variables
#    - Add each variable with the appropriate value for your deployment
#
# 3. For CORS_ORIGIN, use your actual frontend domain:
#    Example: https://yieldagentx.vercel.app
#
# 4. AI API keys are optional - the service uses intelligent fallbacks
#    if these are not provided, ensuring the service always works.
#
# 5. Required Vercel Environment Variables:
#    - HUGGINGFACE_API_KEY (optional)
#    - OPENAI_API_KEY (optional)  
#    - CORS_ORIGIN (your frontend URL)
#    - NODE_ENV=production

# Hugging Face Configuration  
# Get your API key from: https://huggingface.co/settings/tokens
HUGGINGFACE_API_KEY=your_hugging_face_api_key_here

# ==============================================================================
# SERVER CONFIGURATION
# ==============================================================================

# Server Port
PORT=3001

# Node Environment
NODE_ENV=development

# ==============================================================================
# SECURITY CONFIGURATION
# ==============================================================================

# CORS Configuration
# Set to your frontend domain in production
CORS_ORIGIN=http://localhost:3000

# JWT Secret for API authentication
# Generate a strong secret: openssl rand -base64 32
JWT_SECRET=your_jwt_secret_here

# Rate Limiting
ENABLE_RATE_LIMITING=true
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ==============================================================================
# LOGGING CONFIGURATION
# ==============================================================================

# Log Level (error, warn, info, debug)
LOG_LEVEL=info

# Log Directory
LOG_DIR=./logs

# ==============================================================================
# AI MODEL CONFIGURATION
# ==============================================================================

# OpenAI Model Settings
OPENAI_MODEL=gpt-4-turbo-preview
OPENAI_MAX_TOKENS=1000
OPENAI_TEMPERATURE=0.7

# Hugging Face Model Settings
HUGGINGFACE_MODEL=microsoft/DialoGPT-medium
HUGGINGFACE_MAX_LENGTH=512

# ==============================================================================
# BLOCKCHAIN INTEGRATION
# ==============================================================================

# RPC URL for blockchain data (optional)
RPC_URL=https://sepolia.infura.io/v3/your_infura_project_id

# Contract addresses for direct blockchain interaction
VRF_RAFFLE_CONTRACT=0xfeaf076b52d462c346f329dd32d2248b7b520eea
AI_VAULT_CONTRACT=0x299bB7655582f94f4293BB64775C9E1fcE210F3b

# ==============================================================================
# DEFI PROTOCOL CONFIGURATION
# ==============================================================================

# DeFi Protocol API Keys (optional for enhanced data)
AAVE_API_KEY=your_aave_api_key
UNISWAP_API_KEY=your_uniswap_api_key
COMPOUND_API_KEY=your_compound_api_key

# ==============================================================================
# MONITORING & ANALYTICS
# ==============================================================================

# Enable performance monitoring
ENABLE_MONITORING=true

# Analytics tracking
ENABLE_ANALYTICS=false

# Error tracking (optional)
SENTRY_DSN=your_sentry_dsn_here

# ==============================================================================
# CHAINLINK INTEGRATION
# ==============================================================================

# Chainlink node configuration (for advanced integrations)
CHAINLINK_NODE_URL=https://sepolia.infura.io/v3/your_infura_project_id
CHAINLINK_AUTOMATION_REGISTRY=0x86EFBD0b6b2532A0d28E2aB1A7E53c5432A8D6DE

# ==============================================================================
# DEVELOPMENT SETTINGS
# ==============================================================================

# Enable debug mode
DEBUG=false

# API response cache TTL (in seconds)
CACHE_TTL=300

# Maximum portfolio size for analysis
MAX_PORTFOLIO_SIZE=1000000

# ==============================================================================
# PRODUCTION SETTINGS
# ==============================================================================

# Production domain whitelist (comma-separated)
PRODUCTION_DOMAINS=https://your-frontend-domain.vercel.app,https://your-custom-domain.com

# SSL Configuration
SSL_CERT_PATH=./ssl/cert.pem
SSL_KEY_PATH=./ssl/key.pem

# ==============================================================================
# NOTES
# ==============================================================================

# 1. AI Service Integration:
#    - The AI service provides intelligent portfolio analysis and optimization
#    - Uses OpenAI GPT-4 for market analysis and strategy recommendations
#    - Integrates with Hugging Face for specialized financial models
#    - Supports real-time risk assessment and allocation optimization

# 2. Chainlink Integration:
#    - AI service decisions influence Chainlink Automation triggers
#    - Provides data for automated rebalancing decisions
#    - Integrates with price feeds for market analysis
#    - Supports VRF integration for AI-driven randomness

# 3. Security Considerations:
#    - All API keys should be kept secure and never committed to version control
#    - Use environment-specific configurations for development/production
#    - Enable CORS only for trusted domains
#    - Use strong JWT secrets and rotate them regularly

# 4. Performance Optimization:
#    - Adjust model parameters based on your use case
#    - Monitor API usage to avoid rate limiting
#    - Use caching for frequently accessed data
#    - Enable monitoring for production deployments

# 5. Development vs Production:
#    - Use different API keys for development and production
#    - Enable debug logging for development
#    - Use SSL certificates for production deployments
#    - Configure rate limiting based on expected traffic
